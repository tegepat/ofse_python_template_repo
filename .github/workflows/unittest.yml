name: Run unit testing with pytest

on:
  push:
      branches:
      - "**"
  pull_request:
      branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pipenv
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
    - name: Install dependencies using pipenv
      run: pipenv install --dev
    - name: Unittesting with pytest
      run: |
        pipenv run pytest ./test --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml --cov=./test/ --cov-report xml:cov-${{ matrix.python-version }}.xml
    - name: Upload pytest test results
      uses: actions/upload-artifact@v4
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: |
          junit/test-results-${{ matrix.python-version }}.xml 
          cov-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
